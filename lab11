import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# sns.set(rc={'figure.figsize':(8,8)})
# sns.lineplot(x=[1,2,3,4], y=[1,4,9,16],
#              label='linia nr1', color='blue',marker='o', linestyle=':')
# sns.lineplot(x=[4,5,7,11], y=[1,2,3,6],
#              label='linia nr2', color='red')
# plt.xlabel('os x')
# plt.ylabel('os y')
# plt.title('Wykres liniowy')
# plt.show()

# s = pd.Series(np.random.randn(1000))
# s = s.cumsum()
# sns.set()
# wykres = sns.relplot(kind='line',data=s, label='linia')
# wykres.fig.set_size_inches(8,6)
# wykres.fig.suptitle('Wykres liniowy losowy')
# wykres.set_xlabels('indeksy')
# wykres.set_ylabels('wartosci')
# wykres.add_legend()
# wykres.figure.subplots_adjust(left=0.1, right=0.9, bottom=0.1, top=0.9)
# plt.show()

# sns.set()
# data = {'a': np.arange(10),
#         'c': np.random.randint(0, 20, 10),
#         'd': np.random.randn(10)}
# data['b'] = data['a'] + 10 * np.random.randn(10)
# data['d'] = np.abs(data['d']) * 100
# print(data['c'])
# print(data['d'])
# df = pd.DataFrame(data)
# plot = sns.relplot(data=df, x='a', y='b',
#                   hue='c', palette='bright', size='d', legend=True)
# plot.fig.set_size_inches(6,6)
# plot.set(xticks=data['a'])
# plt.show()

# data = {'Kraj':['Belgia','Indie','Brazylia','Polska'],
#         'Stolica':['Bruksela','Delhi','Brasilia','Warszawa'],
#         'Kontynent':['Europa','Azja','Ameryka Poludniowa','Europa'],
#         'Populacja':[112312121,4342332324,534534443,1223444]}
# df = pd.DataFrame(data)
# sns.set()
# plot = sns.barplot(data=df, x='Kontynent', y='Populacja', ci=None, hue='Kontynent', estimator=np.sum, dodge=False, palette=['red','green','yellow'])
# plot.legend(title='Populacja na kontynentach', )
# plot.set(title='Wykres slupkowy')
# plt.show()

# data = {'Kraj':['Belgia','Indie','Brazylia','Polska'],
#         'Stolica':['Bruksela','Delhi','Brasilia','Warszawa'],
#         'Kontynent':['Europa','Azja','Ameryka Poludniowa','Europa'],
#         'Populacja':[112312121,4342332324,534534443,1223444]}
# df = pd.DataFrame(data)


